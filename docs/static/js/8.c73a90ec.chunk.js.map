{"version":3,"sources":["app/scripts/unix-timestamp-converter/UnixTimestampConverter.jsx","app/shared/blocks/CopyableField.jsx"],"names":["UnixTimestampConverter","props","onUnixTimestampChanged","bind","onDateTimeChanged","onDateTimeFormatChanged","state","date","DateTime","now","unixTimestamp","dateTime","dateTimeFormat","this","setState","Math","round","toMillis","toString","toFormat","e","target","value","fromMillis","parseInt","fromFormat","className","Group","htmlFor","id","onChange","href","rel","Component","CopyableField","label","leftLen","rightLen","readOnly","type","rows","Control","text","defaultProps"],"mappings":"4RAQaA,EAAsB,kDACjC,WAAYC,GAAQ,IAAD,EAYhB,OAZgB,qBACjB,cAAMA,IAEDC,uBAAyB,EAAKA,uBAAuBC,KAAK,gBAC/D,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAK,gBACrD,EAAKE,wBAA0B,EAAKA,wBAAwBF,KAAK,gBAEjE,EAAKG,MAAQ,CACXC,KAAMC,WAASC,MACfC,cAAe,GACfC,SAAU,GACVC,eAAgB,iCACjB,EAgGF,OA/FA,8CAED,WACE,MAAiCC,KAAKP,MAA9BC,EAAI,EAAJA,KAAMK,EAAc,EAAdA,eACdC,KAAKC,SAAS,CACZJ,cAAeK,KAAKC,MAAMT,EAAKU,YAAYC,WAC3CP,SAAUJ,EAAKY,SAASP,OAE3B,oCAED,SAAuBQ,GACrB,IAAQR,EAAmBC,KAAKP,MAAxBM,eACOF,EAAkBU,EAAEC,OAA3BC,MACFf,EAAOC,WAASe,WAAWC,SAASd,IAE1CG,KAAKC,SAAS,CACZP,OACAI,SAAUJ,EAAKY,SAASP,GACxBF,oBAEH,+BAED,SAAkBU,GAChB,IAAeT,EAAaS,EAAEC,OAAtBC,MACAV,EAAmBC,KAAKP,MAAxBM,eACFL,EAAOC,WAASiB,WAAWd,EAAUC,GAE3CC,KAAKC,SAAS,CACZP,OACAI,WACAD,cAAeK,KAAKC,MAAMT,EAAKU,YAAYC,eAE9C,qCAED,SAAwBE,GACtB,IAAQb,EAASM,KAAKP,MAAdC,KACOK,EAAmBQ,EAAEC,OAA5BC,MACRT,KAAKC,SAAS,CACZF,iBACAD,SAAUJ,EAAKY,SAASP,OAE3B,oBAED,WACE,MAAoDC,KAAKP,MAAjDI,EAAa,EAAbA,cAAeC,EAAQ,EAARA,SAAUC,EAAc,EAAdA,eAEjC,OACE,6BACE,yBAAKc,UAAU,eACb,wBAAIA,UAAU,cAAY,6BAI5B,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACf,wBAAIA,UAAU,cAAY,cACxB,8BACE,kBAAC,IAAKC,MAAK,KACT,2BAAOC,QAAQ,yCAAuC,iCACtD,kBAAC,IAAa,CACVC,GAAE,wCACFC,SAAUjB,KAAKX,uBACfoB,MAAOZ,KAGb,kBAAC,IAAKiB,MAAK,KACT,2BAAOC,QAAQ,wCAAsC,iBACrD,kBAAC,IAAa,CACVC,GAAE,uCACFC,SAAUjB,KAAKT,kBACfkB,MAAOX,KAGb,kBAAC,IAAKgB,MAAK,KACT,2BAAOC,QAAQ,8CAA4C,sCAEzD,uBACEG,KAAK,iFACLV,OAAO,SACPW,IAAI,uBAAqB,mBAAoB,KACjD,kBAAC,IAAa,CACVH,GAAE,6CACFC,SAAUjB,KAAKR,wBACfiB,MAAOV,eAU5B,EA7GgC,CAASqB,aA+G7BjC,a,8EClHTkC,EAAgB,SAAAjC,GAClB,MAA4C,OAAhBA,EAAMkC,MAAiB,CAAC,EAAG,IAAM,CAAC,EAAG,IAAG,mBAA7DC,EAAO,KAAEC,EAAQ,KAChBP,EAAuB7B,EAAvB6B,SAAUQ,EAAarC,EAAbqC,SAElB,OAAO,kBAAC,IAAKX,MAAK,CAACD,UAAU,OACvBU,EAAU,EAAI,2BAAOR,QAAS3B,EAAM4B,GAAIH,UAAU,2BAA2BzB,EAAMkC,OAAiB,KACtG,yBAAKT,UAAS,iBAAYW,IACtB,yBAAKX,UAAU,eAEI,aAAfzB,EAAMsC,KACN,8BACIb,UAAU,eACVc,KAAK,IACLX,GAAI5B,EAAM4B,GACVP,MAAOrB,EAAMqB,MACbgB,SAAUA,EACVR,SAAUA,IACd,kBAAC,IAAKW,QAAO,CACTF,KAAK,OACLb,UAAU,eACVG,GAAI5B,EAAM4B,GACVP,MAAOrB,EAAMqB,MACbgB,SAAUA,EACVR,SAAUA,IAGd,yBAAKJ,UAAU,sBACf,kBAAC,kBAAe,CAACgB,KAAMzC,EAAMqB,OACzB,4BAAQI,UAAU,yBAAyBa,KAAK,UAChD,uBAAGb,UAAU,gCAiBjCQ,EAAcS,aAAe,CACzBR,MAAO,KACPL,SAAU,aACVQ,UAAU,EACVC,KAAM,QAGKL","file":"static/js/8.c73a90ec.chunk.js","sourcesContent":["import { DateTime } from 'luxon';\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\n\n\nimport CopyableField from '../../shared/blocks/CopyableField';\n\nexport class UnixTimestampConverter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onUnixTimestampChanged = this.onUnixTimestampChanged.bind(this);\n    this.onDateTimeChanged = this.onDateTimeChanged.bind(this);\n    this.onDateTimeFormatChanged = this.onDateTimeFormatChanged.bind(this);\n\n    this.state = {\n      date: DateTime.now(),\n      unixTimestamp: '',\n      dateTime: '',\n      dateTimeFormat: 'yyyy-LL-dd HH:mm:ss.SSS (ZZZ)',\n    }\n  }\n\n  componentDidMount() {\n    const { date, dateTimeFormat } = this.state;\n    this.setState({\n      unixTimestamp: Math.round(date.toMillis()).toString(),\n      dateTime: date.toFormat(dateTimeFormat),\n    });\n  }\n\n  onUnixTimestampChanged(e) {\n    const { dateTimeFormat } = this.state;\n    const { value: unixTimestamp } = e.target;\n    const date = DateTime.fromMillis(parseInt(unixTimestamp));\n\n    this.setState({\n      date,\n      dateTime: date.toFormat(dateTimeFormat),\n      unixTimestamp,\n    });\n  }\n\n  onDateTimeChanged(e) {\n    const { value: dateTime } = e.target;\n    const { dateTimeFormat } = this.state;\n    const date = DateTime.fromFormat(dateTime, dateTimeFormat);\n\n    this.setState({\n      date,\n      dateTime,\n      unixTimestamp: Math.round(date.toMillis()).toString(),\n    });\n  }\n\n  onDateTimeFormatChanged(e) {\n    const { date } = this.state;\n    const { value: dateTimeFormat } = e.target;\n    this.setState({\n      dateTimeFormat,\n      dateTime: date.toFormat(dateTimeFormat),\n    });\n  }\n\n  render() {\n    const { unixTimestamp, dateTime, dateTimeFormat } = this.state;\n\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\">\n            Unix Timestamp Converter\n          </h3>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n              <h4 className=\"card-title\">Parameters</h4>\n                <form>\n                  <Form.Group>\n                    <label htmlFor=\"scriptsUnitTimstampConverterTimestamp\">Unix timestamp (milliseconds)</label>\n                    <CopyableField\n                        id={`scriptsUnitTimstampConverterTimestamp`}\n                        onChange={this.onUnixTimestampChanged}\n                        value={unixTimestamp}\n                    />\n                  </Form.Group>\n                  <Form.Group>\n                    <label htmlFor=\"scriptsUnitTimstampConverterDateTime\">Date and time</label>\n                    <CopyableField\n                        id={`scriptsUnitTimstampConverterDateTime`}\n                        onChange={this.onDateTimeChanged}\n                        value={dateTime}\n                    />\n                  </Form.Group>\n                  <Form.Group>\n                    <label htmlFor=\"scriptsUnitTimstampConverterDateTimeFormat\">\n                      Date and time format (check the&nbsp;\n                      <a\n                        href=\"https://github.com/moment/luxon/blob/master/docs/formatting.md#table-of-tokens\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\">Luxon reference</a>)</label>\n                    <CopyableField\n                        id={`scriptsUnitTimstampConverterDateTimeFormat`}\n                        onChange={this.onDateTimeFormatChanged}\n                        value={dateTimeFormat}\n                    />\n                  </Form.Group>\n                </form>\n              </div>  \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default UnixTimestampConverter;","import propTypes from 'prop-types';\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nconst CopyableField = props => {\n    const [leftLen, rightLen] = props.label === null ? [0, 12] : [2, 10];\n    const { onChange, readOnly } = props;\n\n    return <Form.Group className=\"row\">\n        { leftLen > 0 ? <label htmlFor={props.id} className=\"col-sm-2 col-form-label\">{props.label}</label> : null }\n        <div className={`col-sm-${rightLen}`}>\n            <div className=\"input-group\">\n                {\n                props.type === 'textarea' ?\n                <textarea\n                    className=\"form-control\"\n                    rows=\"4\"\n                    id={props.id}\n                    value={props.value}\n                    readOnly={readOnly}\n                    onChange={onChange}></textarea> :\n                <Form.Control\n                    type=\"text\"\n                    className=\"form-control\"\n                    id={props.id}\n                    value={props.value}\n                    readOnly={readOnly}\n                    onChange={onChange}\n                    />\n                }\n                <div className=\"input-group-append\">\n                <CopyToClipboard text={props.value}>\n                    <button className=\"btn btn-sm btn-primary\" type=\"button\">\n                    <i className=\"mdi mdi-content-copy\"></i>\n                    </button>\n                </CopyToClipboard>\n                </div>\n            </div>\n        </div>\n    </Form.Group>\n};\n\nCopyableField.propTypes = {\n    id: propTypes.string.isRequired,\n    onChange: propTypes.func,\n    readOnly: propTypes.bool,\n    value: propTypes.string.isRequired,\n    type: propTypes.string,\n};\n\nCopyableField.defaultProps = {\n    label: null,\n    onChange: () => {},\n    readOnly: false,\n    type: 'text',\n};\n\nexport default CopyableField;\n  "],"sourceRoot":""}