{"version":3,"sources":["app/scripts/hash-calculator/HashCalculator.jsx","app/shared/blocks/CopyableField.jsx"],"names":["i","HashCalculator","props","state","input","hashes","md5","sha1","sha224","sha256","sha3","sha384","sha512","onInputChange","bind","this","setState","cryptojs","MD5","toString","SHA1","SHA224","SHA256","SHA3","SHA384","SHA512","recalculateHashes","e","target","value","className","Group","htmlFor","id","rows","onChange","label","readOnly","type","Component","CopyableField","leftLen","rightLen","Control","text","defaultProps"],"mappings":"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","file":"static/js/7.6f633e62.chunk.js","sourcesContent":["import cryptojs from 'crypto-js';\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nimport CopyableField from '../../shared/blocks/CopyableField';\n\n\nexport class HashCalculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      hashes: {\n        md5: '',\n        sha1: '',\n        sha224: '',\n        sha256: '',\n        sha3: '',\n        sha384: '',\n        sha512: '',\n      }\n    };\n    this.onInputChange = this.onInputChange.bind(this);\n  }\n\n  recalculateHashes() {\n    const { input } = this.state;\n\n    this.setState({\n      hashes: {\n        md5: cryptojs.MD5(input).toString(),\n        sha1: cryptojs.SHA1(input).toString(),\n        sha224: cryptojs.SHA224(input).toString(),\n        sha256: cryptojs.SHA256(input).toString(),\n        sha3: cryptojs.SHA3(input).toString(),\n        sha384: cryptojs.SHA384(input).toString(),\n        sha512: cryptojs.SHA512(input).toString(),\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.recalculateHashes();\n  }\n\n  async onInputChange(e) {\n    await this.setState({ input: e.target.value });\n    this.recalculateHashes();\n  }\n\n  render() {\n    const { hashes } = this.state;\n\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\">\n            Hash calculator\n          </h3>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n              <h4 className=\"card-title\">Input</h4>\n                <form>\n                  <Form.Group>\n                    <label htmlFor=\"scriptsHashClaculatorInputData\">Please provide your input text here</label>\n                    <textarea\n                      className=\"form-control\"\n                      id=\"scriptsHashClaculatorInputData\"\n                      rows=\"10\"\n                      value={this.state.input}\n                      onChange={this.onInputChange}></textarea>\n                  </Form.Group>\n                </form>\n              </div>  \n            </div>\n          </div>\n\n          <div className=\"col-md-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Calculated hashes</h4>\n                <form>\n                  <CopyableField\n                    id=\"scriptsHashClaculatorHashMd5\"\n                    value={hashes.md5}\n                    label=\"MD5\"\n                    readOnly={true}\n                  />\n                  <CopyableField\n                    id=\"scriptsHashClaculatorHashSha1\"\n                    value={hashes.sha1}\n                    label=\"SHA1\"\n                    readOnly={true}\n                  />\n                  <CopyableField\n                    id=\"scriptsHashClaculatorHashSha224\"\n                    value={hashes.sha224}\n                    label=\"SHA224\"\n                    readOnly={true}\n                  />\n                  <CopyableField\n                    id=\"scriptsHashClaculatorHashSha256\"\n                    value={hashes.sha256}\n                    label=\"SHA256\"\n                    readOnly={true}\n                  />\n                  <CopyableField\n                    id=\"scriptsHashClaculatorHashSha3\"\n                    value={hashes.sha3}\n                    label=\"SHA3\"\n                    type=\"textarea\"\n                    readOnly={true}\n                  />\n                  <CopyableField\n                    id=\"scriptsHashClaculatorHashSha384\"\n                    value={hashes.sha384}\n                    label=\"SHA384\"\n                    readOnly={true}\n                  />\n                  <CopyableField\n                    id=\"scriptsHashClaculatorHashSha512\"\n                    value={hashes.sha512}\n                    label=\"SHA512\"\n                    type=\"textarea\"\n                    readOnly={true}\n                  />\n                </form>\n              </div>  \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default HashCalculator;","import propTypes from 'prop-types';\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nconst CopyableField = props => {\n    const [leftLen, rightLen] = props.label === null ? [0, 12] : [2, 10];\n    const { onChange, readOnly } = props;\n\n    return <Form.Group className=\"row\">\n        { leftLen > 0 ? <label htmlFor={props.id} className=\"col-sm-2 col-form-label\">{props.label}</label> : null }\n        <div className={`col-sm-${rightLen}`}>\n            <div className=\"input-group\">\n                {\n                props.type === 'textarea' ?\n                <textarea\n                    className=\"form-control\"\n                    rows=\"4\"\n                    id={props.id}\n                    value={props.value}\n                    readOnly={readOnly}\n                    onChange={onChange}></textarea> :\n                <Form.Control\n                    type=\"text\"\n                    className=\"form-control\"\n                    id={props.id}\n                    value={props.value}\n                    readOnly={readOnly}\n                    onChange={onChange}\n                    />\n                }\n                <div className=\"input-group-append\">\n                <CopyToClipboard text={props.value}>\n                    <button className=\"btn btn-sm btn-primary\" type=\"button\">\n                    <i className=\"mdi mdi-content-copy\"></i>\n                    </button>\n                </CopyToClipboard>\n                </div>\n            </div>\n        </div>\n    </Form.Group>\n};\n\nCopyableField.propTypes = {\n    id: propTypes.string.isRequired,\n    onChange: propTypes.func,\n    readOnly: propTypes.bool,\n    value: propTypes.string.isRequired,\n    type: propTypes.string,\n};\n\nCopyableField.defaultProps = {\n    label: null,\n    onChange: () => {},\n    readOnly: false,\n    type: 'text',\n};\n\nexport default CopyableField;\n  "],"sourceRoot":""}